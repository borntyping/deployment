---
- tags:
    - 'home'
  block:
    - name: 'copy dotfiles'
      copy:
        src: '{{ item }}'
        dest: '{{ lookup("env", "HOME") }}/.{{ item }}'
      with_items:
        - 'ackrc'
        - 'htoprc'
        - 'inputrc'
        - 'multitailrc'
      tags:
        - 'dotfiles'
        - 'multitailrc'

    - name: 'install executables'
      copy:
        src: '.local/bin/'
        dest: '{{ lookup("env", "HOME") }}/.local/bin'
        mode: '0755'
      tags:
        - 'bin'
        - 'ansible'
        - 'micro'

    - name: 'create .bin directory'
      ansible.builtin.file:
        name: '{{ lookup("env", "HOME") }}/.bin'
        state: 'directory'
      tags:
        - local

    - name: 'install local scripts'
      ansible.builtin.copy:
        content: '{{ item.value }}'
        dest: '{{ lookup("env", "HOME") }}/.bin/{{ item.key }}'
        mode: '0755'
      loop: '{{ bin_scripts|combine(bin_scripts_local)|dict2items }}'
      loop_control:
        label: '{{ item.key }}'
      tags:
        - 'local'

    - name: 'install scripts'
      ansible.builtin.copy:
        src: '.local/share/src/'
        dest: '{{ lookup("env", "HOME") }}/.local/share/src/'
        mode: '0755'
      tags:
        - 'bin'
        - 'git'
        - 'git-tag-version'
        - 'git-tidy'
        - 'reconfigure'
        - 'src'

    - name: 'install man pages'
      ansible.builtin.copy:
        src: '.local/share/man/'
        dest: '{{ lookup("env", "HOME") }}/.local/share/man/'
        mode: '0755'
      tags:
        - 'man'

    - name: 'enable user podman socket'
      ansible.builtin.systemd:
        name: 'podman.socket'
        state: 'started'
        scope: user
      when: 'ansible_distribution == "Fedora"'
      tags:
        - 'fedora'
        - 'podman'
        - 'socket'
        - 'systemd'

    - name: 'copy .config directories'
      ansible.builtin.copy:
        src: '.config/{{ item }}/'
        dest: '{{ lookup("env", "HOME") }}/.config/{{ item }}/'
      loop:
        - atuin
        - direnv
        - fish
        - micro
        - pip
        - pypoetry
      tags:
        - atuin
        - config
        - direnv
        - fish
        - micro
        - pip
        - poetry
        - python

    - name: 'copy .config files'
      ansible.builtin.copy:
        src: '.config/{{ item }}'
        dest: '{{ lookup("env", "HOME") }}/.config/{{ item }}'
      loop:
        - starship.toml
      tags:
        - starship
        - zsh

    - import_tasks: 'lang-zsh.yml'

    - name: 'install python packages with pipx'
      community.general.pipx:
        name: '{{ item }}'
      loop:
        - 'checkov'
        - 'poetry'
        - 'switchbox'
      tags:
        - 'python'
        - 'pipx'

#    - name: 'install golang executables'
#      ansible.builtin.command: 'go install {{ item.package }}'
#      args:
#        creates: '{{ lookup("env", "HOME") }}/.local/lib/go/bin/{{ item.bin }}'
#      environment:
#        GOPATH: '{{ lookup("env", "HOME") }}/.local/lib/go'
#      loop:
#        - package: github.com/stern/stern@latest
#          bin: stern
#        - package: github.com/bbrks/shotgun@latest
#          bin: shotgun
#      tags:
#        - 'bin'
#        - 'golang'
