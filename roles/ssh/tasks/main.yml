---
- tags:
    - 'ssh'
  block:
    - name: 'set facts'
      ansible.builtin.set_fact:
        _ssh_config: '{{ ssh_config + ssh_config_local + ssh_config_secret }}'
        _ssh_keys: '{{ ssh_keys + ssh_keys_local + ssh_keys_secret }}'

    - name: 'create ssh directory'
      ansible.builtin.file:
        name: '{{ ansible_user_dir }}/.ssh'
        state: 'directory'

    - name: 'create ssh sub-directories'
      ansible.builtin.file:
        name: '{{ ansible_user_dir }}/.ssh/{{ item }}'
        state: 'directory'
      with_items:
        - 'config.d'
        - 'hosts'
        - 'keys'
        - 'controlmasters'

    - name: 'create ssh fragments from files'
      ansible.builtin.copy:
        src: '.ssh/config.d/'
        dest: '{{ ansible_user_dir }}/.ssh/config.d/'

    - name: 'create ssh fragments from config'
      ansible.builtin.copy:
        content: '{{ item.config  }}'
        dest: '{{ ansible_user_dir }}/.ssh/config.d/{{ item.order|default(50) }}-{{ item.name }}.config'
      loop: '{{ _ssh_config }}'
      loop_control:
        label: '{{ item.name }}'

    - name: 'generate ssh keys'
      community.crypto.openssh_keypair:
        type: 'ed25519'
        path: '{{ ansible_user_dir }}/.ssh/keys/id_ed25519_{{ item }}'
        comment: '{{ ansible_user_id }}@{{ ansible_host }}:id_ed25519_{{ item }}'
      loop: '{{ _ssh_keys }}'

    - name: 'assemble ssh config'
      ansible.builtin.assemble:
        src: '{{ ansible_user_dir }}/.ssh/config.d/'
        dest: '{{ ansible_user_dir }}/.ssh/config'
        delimiter: '\n'
