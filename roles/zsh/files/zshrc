#!/bin/zsh
# shellcheck disable=SC1090 disable=SC2034 disable=SC2206

HISTFILE="$HOME/.zhistory"              # Save history.
HISTSIZE=7500                           # Lines of history to keep in memory.
SAVEHIST=5000                           # Lines of history to save to a file.

setopt ALWAYS_TO_END                    # Move cursor after completion.
setopt APPEND_HISTORY                   # Append to $HISTFILE, not replace.
setopt AUTO_LIST                        # List choices on ambiguous completion.
setopt AUTO_MENU                        # Show completion menu on tab press.
setopt AUTO_NAME_DIRS                   # Allows 'cd ~borntyping' (see below).
setopt AUTO_PARAM_KEYS                  # Intelligent handling of characters
setopt AUTO_PARAM_SLASH                 #   after a completion.
setopt AUTO_REMOVE_SLASH                # Remove trailing slash when needed.
setopt COMPLETE_ALIASES                 # Allow autocompletion for aliases.
setopt COMPLETE_IN_WORD                 # Allow completion from middle of word.
setopt EXTENDED_HISTORY                 # Record additional information.
setopt HIST_EXPIRE_DUPS_FIRST           # Remove duplicate entries first.
setopt HIST_FIND_NO_DUPS                # Never find duplicates when searching.
setopt HIST_IGNORE_ALL_DUPS             # Remove old duplicate entries first.
setopt HIST_IGNORE_DUPS                 # Ignore adjacent repeated entries.
setopt HIST_IGNORE_SPACE                # Skip if the line starts with space.
setopt HIST_SAVE_NO_DUPS                # Never save duplicate commands.
setopt HIST_VERIFY                      # Don't immediately run history commands.
setopt INC_APPEND_HISTORY               # Append to $HISTFILE while running.
setopt INTERACTIVE_COMMENTS             # Allow comments in interactive mode.
setopt LIST_PACKED                      # Smallest completion menu.
setopt RM_STAR_WAIT                     # Force the user to wait before 'rm *'.
setopt SHARE_HISTORY                    # Share history between ZSH instances.
unsetopt FLOW_CONTROL                   # Disable start/stop characters.
unsetopt MENU_COMPLETE                  # Don't autoselect completions.

autoload edit-command-line
zle -N edit-command-line

bindkey '\e[3~' delete-char             # Ensure Delete works as expected.
bindkey '^[[F' end-of-line              # Ensure End works as expected.
bindkey '^[[H' beginning-of-line        # Ensure Home works as expected.
bindkey '^[[Z' reverse-menu-complete    # Shift-Tab to go back in menus.
bindkey '^e' edit-command-line          # Edit current line (Ctrl+e).
bindkey -r "^V"                         # Disable `ctrl-v` so it does not mix with `ctrl-shift-v`.

bindkey '\e[1~'   beginning-of-line     #
bindkey '\e[H'    beginning-of-line     #
bindkey '\eOH'    beginning-of-line     #
bindkey '\e[2~'   overwrite-mode        # Ensure home and End work as expected.
bindkey '\e[3~'   delete-char           # https://unix.stackexchange.com/a/110846
bindkey '\e[4~'   end-of-line           #
bindkey '\e[F'    end-of-line           #
bindkey '\eOF'    end-of-line           #

alias gc='git commit'
alias gca='git commit -a'
alias gd='git diff'
alias gs='git status'

alias cola='git-cola 2>/dev/null &'                                             # Run 'git-cola' in the background and mute any UI warnings.
alias gitg='gitg 2>/dev/null &'                                                 # Run 'gitg' in the background and mute any UI warnings.
alias gf='git-forgit'                                                           # https://github.com/wfxr/forgit

export EDITOR="micro"                                                           # https://micro-editor.github.io/

export BAT_PAGER="less --quit-if-one-screen --RAW-CONTROL-CHARS"                # Don't use a pager for short files, just echo them.
export BAT_STYLE="plain"                                                        # Minimal UI when using bat as a pager. Just does code highlighting.
export BUN_INSTALL="$HOME/.bun"                                                 # https://bun.sh/docs/installation
export EXA_COLORS="uu=35:gu=35"                                                 # colour own user and group in pink instead of yellow (https://the.exa.website/docs/colour-themes
export EXA_ICON_SPACING="2"                                                     # add extra spacing when using icons (https://the.exa.website/docs/environment-variables
export FORGIT_FZF_DEFAULT_OPTS="--reverse"                                      # https://github.com/wfxr/forgit#fzf-options
export FORGIT_NO_ALIASES=1                                                      # https://github.com/wfxr/forgit#shell-aliases
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window wrap"              # Show preview window and wrap text. Useful for long commands.
export GOPATH="${HOME}/.local/lib/go"                                           # Stop golang from polluting my home directory.
export NPM_CONFIG_PREFIX="${HOME}/.npm"                                         # https://docs.npmjs.com/cli/v7/configuring-npm/folders#prefix-configuration
export PIPENV_DONT_LOAD_ENV=1                                                   # Direnv manages our '.env', tell Pipenv not to load it.
export PIPENV_IGNORE_VIRTUALENVS=1                                              # Don't try and detect running in an existing Python virtualenv.
export PIPENV_VENV_IN_PROJECT=1                                                 # Place Pipenv virtualenvs in '.venv' directories.
export PIP_REQUIRE_VIRTUALENV=1                                                 # Require that Pip is run inside a virtualenv.
export VIRTUAL_ENV_DISABLE_PROMPT=1                                             # My personal prompt has it's own display for Python virtualenvs.

# 2.5.11: Path
# https://zsh.sourceforge.io/Guide/zshguide02.html#l24
typeset -U path
export path=("/home/linuxbrew/.linuxbrew/bin" $path)                            # https://brew.sh/
export path=("${HOME}/.local/share/miniplug/wfxr/forgit/bin" $path)             # https://github.com/wfxr/forgit#git-integration

export path=("${HOME}/.bun/bin" $path)                                          # https://bun.sh/docs/installation
export path=("${HOME}/.cargo/bin" $path)                                        # https://doc.rust-lang.org/cargo/
export path=("${HOME}/.krew/bin" $path)                                         # https://krew.sigs.k8s.io/
export path=("${HOME}/.local/lib/go/bin" $path)                                 # https://go.dev/wiki/GOPATH (see $GOPATH above).
export path=("${HOME}/.npm/bin" $path)                                          # https://www.npmjs.com/

export path=("${HOME}/.local/share/src" $path)                                  # Ansible installs my own scripts here.
export path=("${HOME}/.local/bin" $path)                                        # pip/pipx and other tools install binaries here.
export path=("${HOME}/.bin" $path)                                              # The '.bin' directory should take precedence over '.local/bin'.

# 2.5.7: Named directories
# http://zsh.sourceforge.net/Guide/zshguide02.html
export github="${HOME}/Development/github.com"
export gitlab="${HOME}/Development/gitlab.com"
export scratch="${HOME}/Development/scratch"

# Atuin
# https://github.com/ellie/atuin/blob/main/docs/key-binding.md
if [[ -v 'commands[atuin]' ]]; then
  export ATUIN_NOBIND="true"
  eval "$(atuin init zsh)"
  bindkey '^r' _atuin_search_widget
fi

# Bat - cat replacement
# https://github.com/sharkdp/bat
# https://github.com/Manishearth/oreutils
if [[ -v "commands[bat]" ]]; then
  export PAGER="bat"
  alias cat='bat'
elif [[ -v "commands[batcat]" ]]; then
  export PAGER="batcat"
  alias bat='batcat'
  alias cat='batcat'
fi

# Direnv
# https://direnv.net/
if [[ -v "commands[direnv]" ]]; then
  eval "$(direnv hook zsh)"
fi

# Exa - ls replacement
# https://the.exa.website/
# https://github.com/Manishearth/oreutils
if [[ -v "commands[exa]" ]]; then
  alias exa='exa --group'                                                       # Always show group information when using exa
fi

# Podman
# systemctl --user start podman.socket
if [[ -v 'commands[podman]' && -f "${XDG_RUNTIME_DIR}/podman/podman.sock" ]]; then
  export DOCKER_HOST="unix://${XDG_RUNTIME_DIR}/podman/podman.sock"
fi

# Completion for kubectl aliases.
# https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion
if [[ -v 'commands[kubectl]' ]]; then
  source "$HOME/.local/share/zsh/kubectl.zsh"
fi

# Ubuntu specific configuration.
# This isn't needed on most of my machines.
if [[ $(lsb_release -i) == "Distributor ID:	Ubuntu" ]]; then
  source "$HOME/.local/share/zsh/ubuntu.zsh"
fi

# Load machine-local configuration.
for conf in "$HOME/.config/zsh/zshrc.d/"*.zsh; do
  source "${conf}"
done

# Starship prompt
# https://starship.rs
if [[ -v "commands[starship]" ]]; then
  source <("${HOME}/.local/bin/starship" init zsh --print-full-init)
fi

# Completion rules
# These should be loaded after 'kubectl.zsh' and anything that adds completions.
# https://zsh.sourceforge.net/Doc/Release/Completion-System.html
# https://github.com/Aloxaf/fzf-tab/wiki/Configuration
fpath+=("${HOME}/.cache/zsh/functions" "${HOME}/.asdf/completions")
autoload -Uz compinit
zstyle ':completion:*:*:*:*:*' menu select                                      # Select completions with an interactive menu.
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"                         # Set list-colors to enable filename colorizing.
zstyle ':completion:*:descriptions' format '[%d]'                               # Set descriptions format to enable group support.
zstyle ':completion:*:git-checkout:*' sort false                                # Disable sort when completing `git checkout`.
zstyle -e ':completion:*:hosts' hosts 'reply=()'
compinit

# ZSH plugins using miniplug
# https://git.sr.ht/~yerinalexey/miniplug
source "$HOME/.local/share/zsh/miniplug.zsh"
if [[ -v 'commands[zoxide]' ]]; then
  miniplug plugin 'ajeetdsouza/zoxide'
fi
miniplug plugin 'wfxr/forgit'
miniplug plugin 'zsh-users/zsh-completions'
miniplug load


if [[ "$TERMINAL_EMULATOR" == "JetBrains-JediTerm" ]]; then
  echo "Not loading full profile, running inside a JetBrains IDE."
  return
fi

# ZSH automatic completion ('^ ' is Ctrl+Space)
# https://github.com/zsh-users/zsh-autosuggestions
if [[ -f "/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  source "/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
  bindkey '^ ' autosuggest-accept
fi

# ZSH syntax highlighting plugin (should be loaded last)
# https://github.com/zsh-users/zsh-syntax-highlighting
if [[ -f "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
  export ZSH_HIGHLIGHT_STYLES['comment']='fg=green'
  export ZSH_HIGHLIGHT_STYLES['unknown-token']='fg=red'
  export ZSH_HIGHLIGHT_STYLES['globbing']='fg=cyan'
  export ZSH_HIGHLIGHT_STYLES['single-quoted-argument']='fg=blue'
  export ZSH_HIGHLIGHT_STYLES['double-quoted-argument']='fg=blue'
  export ZSH_HIGHLIGHT_STYLES['dollar-double-quoted-argument']='fg=yellow'
  export ZSH_HIGHLIGHT_STYLES['back-double-quoted-argument']='fg=yellow'
fi
