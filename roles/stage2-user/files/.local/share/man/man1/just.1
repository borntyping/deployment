.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.2.
.TH JUST "1" "August 2022" "just 1.4.0" "Just Manual"
.SH NAME
just \- save and run commands
.SH DESCRIPTION
just 1.4.0
\- Please see https://github.com/casey/just for more information.
.SS "USAGE:"
.IP
just [FLAGS] [OPTIONS] [\-\-] [ARGUMENTS]...
.SS "FLAGS:"
.TP
\fB\-\-changelog\fR
Print changelog
.TP
\fB\-\-check\fR
Run `\-\-fmt` in 'check' mode. Exits with 0 if justfile is formatted correctly. Exits with
1 and prints a diff if formatting is required.
.TP
\fB\-\-choose\fR
Select one or more recipes to run using a binary. If `\-\-chooser` is not passed the
chooser defaults to the value of $JUST_CHOOSER, falling back to `fzf`
.TP
\fB\-\-clear\-shell\-args\fR
Clear shell arguments
.TP
\fB\-\-dry\-run\fR
Print what just would do without doing it
.TP
\fB\-\-dump\fR
Print justfile
.TP
\fB\-e\fR, \fB\-\-edit\fR
Edit justfile with editor given by $VISUAL or $EDITOR, falling back to `vim`
.TP
\fB\-\-evaluate\fR
Evaluate and print all variables. If a variable name is given as an argument, only print
that variable's value.
.TP
\fB\-\-fmt\fR
Format and overwrite justfile
.TP
\fB\-\-highlight\fR
Highlight echoed recipe lines in bold
.TP
\fB\-\-init\fR
Initialize new justfile in project root
.TP
\fB\-l\fR, \fB\-\-list\fR
List available recipes and their arguments
.TP
\fB\-\-no\-dotenv\fR
Don't load `.env` file
.TP
\fB\-\-no\-highlight\fR
Don't highlight echoed recipe lines in bold
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Suppress all output
.TP
\fB\-\-shell\-command\fR
Invoke <COMMAND> with the shell used to run recipe lines and backticks
.TP
\fB\-\-summary\fR
List names of available recipes
.TP
\fB\-u\fR, \fB\-\-unsorted\fR
Return list and summary entries in source order
.TP
\fB\-\-unstable\fR
Enable unstable features
.TP
\fB\-\-variables\fR
List names of variables
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Use verbose output
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version information
.SS "OPTIONS:"
.TP
\fB\-\-chooser\fR <CHOOSER>
Override binary invoked by `\-\-choose`
.HP
\fB\-\-color\fR <COLOR>
.TP
Print colorful output [default: auto]
[possible values: auto, always, never]
.HP
\fB\-c\fR, \fB\-\-command\fR <COMMAND>
.IP
Run an arbitrary command with the working directory, `.env`, overrides, and exports set
.HP
\fB\-\-completions\fR <SHELL>
.IP
Print shell completion script for <SHELL> [possible values: zsh, bash, fish, powershell, elvish]
.HP
\fB\-\-dotenv\-filename\fR <DOTENV\-FILENAME>
.IP
Search for environment file named <DOTENV\-FILENAME> instead of `.env`
.TP
\fB\-\-dotenv\-path\fR <DOTENV\-PATH>
Load environment file at <DOTENV\-PATH> instead of searching for one
.HP
\fB\-\-dump\-format\fR <FORMAT>
.TP
Dump justfile as <FORMAT> [default: just]
[possible values: just, json]
.TP
\fB\-f\fR, \fB\-\-justfile\fR <JUSTFILE>
Use <JUSTFILE> as justfile
.TP
\fB\-\-list\-heading\fR <TEXT>
Print <TEXT> before list
.TP
\fB\-\-list\-prefix\fR <TEXT>
Print <TEXT> before each list item
.TP
\fB\-\-set\fR <VARIABLE> <VALUE>
Override <VARIABLE> with <VALUE>
.TP
\fB\-\-shell\fR <SHELL>
Invoke <SHELL> to run recipes
.TP
\fB\-\-shell\-arg\fR <SHELL\-ARG>...
Invoke shell with <SHELL\-ARG> as an argument
.TP
\fB\-s\fR, \fB\-\-show\fR <RECIPE>
Show information about <RECIPE>
.HP
\fB\-d\fR, \fB\-\-working\-directory\fR <WORKING\-DIRECTORY>
.IP
Use <WORKING\-DIRECTORY> as working directory. \fB\-\-justfile\fR must also be set
.SS "ARGS:"
.TP
<ARGUMENTS>...
Overrides and recipe(s) to run, defaulting to the first recipe in the justfile
