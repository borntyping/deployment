#!/usr/bin/env sh

# with tool
# usage: with <program>
# opens an interactive shell instance that automatically prefixes all subsequent commands with program name

# thanks to /u/Vaphell
drop_with()
{
    if [ ${#prefix[@]} -gt 1  ]
    then
        prefix=( "${prefix[@]:0:${#prefix[@]}-1}" )
    else
        exit 0
    fi
}

add_with()
{
  # separate into white space
  # FIXME: foo "bar baz" should add two elements not one
  IFS=' ' read -r -a parse_array <<< "$@"
  prefix=( "${prefix[@]}" "${parse_array[@]}" )
}

run_with()
{
  while IFS="" read -r -e -d $'\n' -p "$pmpt> " options; do
    history -s "$options"

    curr_command="$(echo $options | { read first rest ; echo $first ; })"
    case $curr_command in
        "" )
          # null case: run prefix
          ${prefix[@]} ;;
        "-" )
          # remove with
          drop_with
          pmpt="${prefix[@]}" ;;
        +* )
          # nesting withs
          parsed=${options#"+"}
          add_with "$parsed"
          pmpt="${prefix[@]}" ;;
        :* )
          # shell command
          parsed=${options#":"}
          if [ "$parsed" = "q" ]; then
            exit 0
          fi
          ${parsed} ;;
        * )
          # prepend prefix to command
          eval "${prefix[@]} ${options}"
    esac
  done
}

declare -a prefix
prefix=( "$@" )
pmpt=${prefix[*]}

type $1 2>&1 > /dev/null
program_installed=$?
if [ ! $program_installed -eq 0 ]; then
  echo "error: Program" $1 "is not installed"
  exit 1
fi

while [ true ]; do
  run_with
done
